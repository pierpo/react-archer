// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render an arrow with className 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftelem-right"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
        <g
          class="blink"
        >
          <path
            d="M-20,0 C0,0 0,0 20,0"
            marker-end="url(#arrow00001elem-leftelem-right)"
            marker-start="url(#arrow00001elem-leftelem-right)"
            style="fill: none; stroke: #f00; stroke-width: 2;"
          />
        </g>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render no arrow if id is not found 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftoh_20no"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render no arrow if id is not found and not raise a console.warn 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftoh_20no"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render simple elements 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftelem-right"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
        <g>
          <path
            d="M0,0 C10,0 10,0 20,0"
            marker-end="url(#arrow00001elem-leftelem-right)"
            style="fill: none; stroke: #f00; stroke-width: 2;"
          />
        </g>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render the arrow on both ends 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftelem-right"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
        <g>
          <path
            d="M-20,0 C0,0 0,0 20,0"
            marker-end="url(#arrow00001elem-leftelem-right)"
            marker-start="url(#arrow00001elem-leftelem-right)"
            style="fill: none; stroke: #f00; stroke-width: 2;"
          />
        </g>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render the arrow only at start 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftelem-right"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
        <g>
          <path
            d="M-20,0 C-10,0 -10,0 0,0"
            marker-start="url(#arrow00001elem-leftelem-right)"
            style="fill: none; stroke: #f00; stroke-width: 2;"
          />
        </g>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render the arrow with a circle end when provided 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftelem-right"
            markerHeight="44"
            markerUnits="strokeWidth"
            markerWidth="44"
            orient="auto-start-reverse"
            refX="24"
            refY="22"
          >
            <circle
              cx="22"
              cy="22"
              fill="#c0ffee"
              r="11"
              stroke="tomato"
              stroke-width="2"
            />
          </marker>
        </defs>
        <g>
          <path
            d="M0,0 C11,0 11,0 22,0"
            marker-end="url(#arrow00001elem-leftelem-right)"
            style="fill: none; stroke: #f00; stroke-width: 2;"
          />
        </g>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render the arrow with an arrow end by default 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-rightelem-left"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
        <g>
          <path
            d="M0,0 C-10,0 -10,0 -20,0"
            marker-end="url(#arrow00001elem-rightelem-left)"
            style="fill: none; stroke: #f00; stroke-width: 2;"
          />
        </g>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;

exports[`ArcherContainer rendering an svg with the marker element used to draw an svg arrow should render the arrows with labels 1`] = `
<body>
  <div>
    <div
      style="position: relative;"
    >
      <svg
        style="position: absolute; width: 100%; height: 100%; top: 0px; left: 0px; pointer-events: none;"
      >
        <defs>
          <marker
            id="arrow00001elem-leftelem-right"
            markerHeight="6"
            markerUnits="strokeWidth"
            markerWidth="10"
            orient="auto-start-reverse"
            refX="0"
            refY="3"
          >
            <path
              d="M0,0 L0,6 L10,3 z"
              fill="#f00"
            />
          </marker>
        </defs>
        <g>
          <path
            d="M-20,0 C-10,0 -10,0 0,0"
            marker-start="url(#arrow00001elem-leftelem-right)"
            style="fill: none; stroke: #f00; stroke-width: 2;"
          />
          <foreignobject
            height="1"
            style="overflow: visible; pointer-events: none;"
            width="20"
            x="-20"
            y="0"
          >
            <div
              style="position: absolute; left: 50%; top: 50%; transform: translateX(-50%) translateY(-50%); pointer-events: all;"
            >
              <div>
                <div>
                  this is a fine label
                </div>
              </div>
            </div>
          </foreignobject>
        </g>
      </svg>
      <div
        style="height: 100%;"
      >
        <div>
          element 1
        </div>
        <div>
          element 2
        </div>
      </div>
    </div>
  </div>
</body>
`;
